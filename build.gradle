/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.3/userguide/java_library_plugin.html
 */

buildscript{
    repositories{
        mavenCentral()
    }
    dependencies {
        classpath group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
    }
}

// Apply the java-library plugin to add support for Java Library
apply plugin: 'java-library'
apply plugin: 'eclipse'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:23.0'
    implementation 'com.google.code.gson:gson:2.8.5'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}

task checkLicenses(type: JavaExec) {
    classpath += sourceSets.main.runtimeClasspath
    println main = "com.gamebuster19901.license.LicenseChecker"
    args = ['notBinary']
}
build.dependsOn checkLicenses

task applyLicenses(type: JavaExec) {
    classpath += sourceSets.main.runtimeClasspath
    println main = "com.gamebuster19901.license.LicenseChecker"
    args = ['notBinary', 'applyLicenses']
}

task editLicenses(type:JavaExec) {
    classpath += sourceSets.main.runtimeClasspath
    standardInput = System.in
    println main = "com.gamebuster19901.license.create.CreateChecker"
    args = ['notBinary', 'applyLicenses']
}

task stripLicenses{
    println "license stripping not implemented yet"
}

editLicenses.dependsOn stripLicenses


test {
    exclude '**/*'
}

